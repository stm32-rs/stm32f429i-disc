[package]
edition = "2018"
authors = ["Daniel Egger <daniel@eggers-club.de>"]
categories = [
    "embedded",
    "no-std",
]
description = "Board support crate for the STM32F429I DISCOVERY microcontroller board"
documentation = "https://docs.rs/crate/stm32f429i-disc"
keywords = [
    "arm",
    "cortex-m",
    "template",
    "bsp",
    "stm32",
    "stm32f429"
]
license = "0BSD"
name = "stm32f429i-disc"
repository = "https://github.com/stm32-rs/stm32f429i-disc"
version = "0.3.0"
readme = "README.md"

[workspace]
members = ["testsuite"]

[dependencies]
cortex-m = "0.7.1"
cortex-m-rt = "0.6.13"
defmt = "0.2.0"
defmt-rtt = "0.2.0"
nb = "1.0.0"
panic-probe = { version = "0.2.0", features = ["print-defmt"] }
ssd1306 = "0.5.2"

[dependencies.stm32f4xx-hal]
version = "0.9"
features = ["rt", "stm32f429"] 

[features]
# set logging levels here
default = [
  "defmt-default",
  # "dependency-a/defmt-trace",
]

# do NOT modify these features
defmt-default = []
defmt-trace = []
defmt-debug = []
defmt-info = []
defmt-warn = []
defmt-error = []

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }